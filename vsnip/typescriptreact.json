{
	"clv": {
		"prefix": "clv",
		"body": [
			"import {Grid, TextField} from '@material-ui/core';",
			"import React, {useEffect} from 'react';",
			"import {useDispatch, useSelector} from 'react-redux';",
			"import {createList, FieldProps, ListAction, ListProps} from '../components';",
			"import {$1} from '../models';",
			"import {ADD_$2_ACTION, DELETE_SELECTED_$2, DELETE_SELECTED_$2S, FETCH_$2S_ACTION, RootState, UPDATE_$2_ACTION} from '../redux';",
			"",
			"\tconst $1sList = createListComponent<$1, $3>();",
			"",
			"export const $1sView = () => {",
			"\tconst dispatch = useDispatch();",
			"\tuseEffect(() => {",
			"\t\tdispatch(FETCH_$2S_ACTION());",
			"\t}, [dispatch])",
			"\tconst [",
			"\t\t$5s,",
			"\t] = useSelector<RootState, [",
			"\t\t$1,",
			"\t]>(state => [",
			"\t\tstate.$5s,",
			"\t]);",
			"\tconst columns: string[] = [",
			"\t\t$4",
			"\t];",
			"\tconst actions: ListAction<$3>[] = [",
			"\t\t{",
			"\t\t\ttext: 'حذف المحدد',",
			"\t\t\taction: list => {",
			"\t\t\t\tdispatch(DELETE_SELECTED_$2S(list));",
			"\t\t\t}",
			"\t\t},",
			"\t];",
			"\tconst addFields: FieldProps<$1>[] = [];",
			"\tconst editFields: FieldProps<$1>[] = [];",
			"\t$0",
			"\tconst props: ListProps<$1, $3 = {",
			"\t\tadd: {",
			"\t\t\tfields: addFields,",
			"\t\t\thandleOnSubmit: () => {",
			"\t\t\t\t$9",
			"\t\t\t\tdispatch(ADD_$2_ACTION({ $10 }));",
			"\t\t\t}",
			"\t\t},",
			"\t\tedit: {",
			"\t\t\tfields: editFields,",
			"\t\t\thandleOnSubmit: $5 => {",
			"\t\t\t\tif ($5) {",
			"\t\t\t\t\t$11",
			"\t\t\t\t\tdispatch(UPDATE_$2_ACTION({ ${6:id}: $5.${6:id}, $12 }));",
			"\t\t\t\t}",
			"\t\t\t}",
			"\t\t},",
			"\t\theader: {",
			"\t\t\tcolumns,",
			"\t\t\tactions,",
			"\t\t},",
			"\t\ttemplate: {",
			"\t\t\titems: $5s,",
			"\t\t\tidSelectorFunction: $5 => $5.${6:id},",
			"\t\t\tcolumnsGeneratorFunction: $5 => [",
			"\t\t\t\t$13",
			"\t\t\t],",
			"\t\t\tactionsGeneratorFunction: $5 => [",
			"\t\t\t\t{",
			"\t\t\t\t\ttext: 'حذف',",
			"\t\t\t\t\taction: () => {",
			"\t\t\t\t\t\tdispatch(DELETE_SELECTED_$2($5.${6:id}));",
			"\t\t\t\t\t}",
			"\t\t\t\t},",
			"\t\t\t],",
			"\t\t\tmatchesSearch: ($5, search) => $5.${7:name}.toLowerCase().includes(search.toLowerCase())",
			"\t\t},",
			"\t\tfiltering: {",
			"\t\t\tsearch: {",
			"\t\t\t\tlabel: '$8'",
			"\t\t\t},",
			"\t\t\tsort: {",
			"\t\t\t\torder: [],",
			"\t\t\t\tdates: []",
			"\t\t\t},",
			"\t\t}",
			"\t}",
			"\treturn <$1sList {...props} />;",
			"}"
		],
		"description": "Creates a list view"
	},
	"addf": {
		"prefix": "addf",
		"body": [
			"const add$1FieldRef = React.createRef<HTMLInputElement>();",
			"addFields.push({",
			"\tref: add$1FieldRef,",
			"\tElement: () => <Grid item xs={12}><TextField fullWidth required label='$2' variant='filled' dir='rtl' inputRef={add$1FieldRef} /></Grid>",
			"});"
		],
		"description": "Creates an add field"
	},
	"editf": {
		"prefix": "editf",
		"body": [
			"const edit$1FieldRef = React.createRef<HTMLInputElement>();",
			"editFields.push({",
			"\tref: edit$1FieldRef,",
			"\tElement: ({ defaultValue }) => <Grid item xs={12}><TextField dir='rtl' defaultValue={defaultValue} fullWidth required label='$2' variant='filled' inputRef={edit$1FieldRef} /></Grid>,",
			"\tgetDefaultValue: $3 => {",
			"\t\tif (edit$1FieldRef.current) edit$1FieldRef.current.value = $3?.$4 ?? '';",
			"\t\treturn $3?.$4 ?? '';",
			"\t}",
			"});"
		],
		"description": "Creates an edit field"
	},
	"nextp": {
		"prefix": "nextp",
		"description": "Creates NextJS page",
		"body": [
			"import { $1View } from '../src';",
			"import { serverSideTranslations } from 'next-i18next/serverSideTranslations';",
			"import { GetStaticProps } from 'next';",
			"",
			"const $1 = () => {",
			"\treturn <$1View />",
			"}",
			"",
			"export const getStaticProps: GetStaticProps = async ({ locale }) => ({",
			"\tprops: {",
			"\t\t...await serverSideTranslations(locale ?? 'en', ['common'$0]),",
			"\t},",
			"})",
			"",
			"export default $1;"
		]
	},
	"nextv": {
		"prefix": "nextv",
		"description": "Creates a NextJS view with translation",
		"body": [
			"import { useTranslation } from 'next-i18next';",
			"",
			"export const $1View = () => {",
			"\tconst { t } = useTranslation('common');",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"}"
		]
	}
}
